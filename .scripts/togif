#!/bin/bash

in_file="$1"
out_file="$2"
height_px=512
start_sec=00
end_sec=59
color_count=256
framerate=15

for i in "$@"; do
case $i in
    -i=*|--input=*)  in_file="${i#*=}"; shift ;;
    -o=*|--output=*) out_file="${i#*=}"; shift ;;
    -h=*|--height=*) height_px="${i#*=}"; shift ;;
    -s=*|--start=*)  start_sec="${i#*=}"; shift ;;
    -e=*|--end=*)    end_sec="${i#*=}"; shift ;;
    -c=*|--color=*)  color_count="${i#*=}"; shift ;;
    -r=*|--framerate=*)  framerate="${i#*=}"; shift ;;
esac
done

if [ $1 = "help" ] || [ $1 = "--help" ] || [ $1 = "-h" ] || [ $1 = "" ]; then
    echo -e "togif in_file out_file [OPTION...]\n"
    echo -e "OPTIONS"
    echo -e "\t-i FILE, --input=FILE\n"
    echo -e "\t-o FILE, --output=FILE\n"
    echo -e "\t-h HEIGHT, --height=HEIGHT"
    echo -e "\t\tWidth will be scaled according to given HEIGHT. Default: 512\n"
    echo -e "\t-s SEC, --start=SEC"
    echo -e "\t\tStarts the video from given SEC. Default: 00\n"
    echo -e "\t-e SEC, --end=SEC"
    echo -e "\t\tEnds the video at the given SEC. Default: 59\n"
    echo -e "\t-c COUNT, --color=COUNT"
    echo -e "\t\tReduce the color palette to COUNT colors. (If it's lower already, does nothing.) (Only works for gif outputs) Default: 256\n"
    echo -e "\t-r COUNT, --framerate=COUNT"
    echo -e "\t\tReduce videos framerate to COUNT. Default: 15"
else

    echo "=== CONVERTING ==="
    ffmpeg \
      -i "$in_file" \
      -r $framerate \
      -vf scale=$height_px:-1 \
      -ss 00:00:$start_sec -to 00:00:$end_sec \
      "$out_file"
    convert_result=$?
    echo "=== DONE ==="

    # Optimize if it's a gif
    if [[ $convert_result == 0 ]] && [[ "$out_file" == *.gif ]]; then
        echo ""
        echo "=== OPTIMIZING ==="
        gifsicle -i "$out_file" --optimize=3 --colors $color_count -o "${out_file}_optimized"
        rm "$out_file"
        mv "${out_file}_optimized" "$out_file"
        echo "=== DONE ==="
    fi

fi
